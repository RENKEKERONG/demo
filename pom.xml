<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.renke</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>1.8</java.version>
        <docker.image.prefix>springio</docker.image.prefix>
    </properties>
    <dependencies>

        <!--web的场景，自动帮我们引入了web模块开发需要的相关jar包-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>com.spotify</groupId>-->
<!--            <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--            <version>1.3.6</version>-->
<!--        </dependency>-->
    </dependencies>

    <!--    可以打成直接运行的Jar包 可以引入依赖包-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

<!--            <plugin>-->

<!--                <groupId>com.spotify</groupId>-->

<!--                <artifactId>docker-maven-plugin</artifactId>-->

<!--                <version>0.4.14</version>-->

<!--                <configuration>-->

<!--                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->

<!--                    &lt;!&ndash;指定docker镜像的版本号&ndash;&gt;-->

<!--                    <imageTags>-->

<!--                        &lt;!&ndash;使用maven项目的版本号&ndash;&gt;-->

<!--                        <imageTag>${project.version}</imageTag>-->

<!--                        <imageTag>latest</imageTag>-->

<!--                    </imageTags>-->

<!--                    <dockerDirectory>src/main/docker</dockerDirectory>-->

<!--                    <resources>-->

<!--                        <resource>-->

<!--                            <targetPath>/</targetPath>-->

<!--                            <directory>${project.build.directory}</directory>-->

<!--                            <include>${project.build.finalName}.jar</include>-->

<!--                        </resource>-->

<!--                    </resources>-->

<!--                </configuration>-->

<!--            </plugin>-->



<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--                <version>1.3.6</version>-->
<!--                <configuration>-->
<!--                    <repository>${project.artifactId}</repository>-->
<!--                    &lt;!&ndash; <tag>${project.version}</tag> 不指定tag默认为latest &ndash;&gt;-->
<!--                    <buildArgs>-->
<!--                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
<!--                    </buildArgs>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>


</project>
